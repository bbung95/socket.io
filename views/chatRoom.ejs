<!DOCTYPE html>

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>무피채팅방</title>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <!-- jQuery fancyapps -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fancyapps/ui/dist/fancybox.css" />


  <style>
    #main {
      margin: 0px;
      padding-bottom: 140px;
      padding-top: 60px;
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
        Helvetica, Arial, sans-serif;
      height: 100%;
    }

    #form {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      height: 140px;
      box-sizing: border-box;
      background: white;
    }

    #input {
      margin: 10px;
      /* background: rgb(241, 246, 255); */
      height: 80px;
      resize: none;
      width: 80%;
    }

    #topbar {
      background: #edf3f8;
      height: 60px;
    }

    #btnbar {
      height: 40px;
      background: #f2f2f2;
      padding: 5px;
    }

    #btnbar>button {

      height: 100%;
    }

    #messages {
      list-style-type: none;
      margin: 0 auto;
      padding: 0;
    }

    #messages>li {
      padding: 0.5rem 1rem;
    }

    #sendbtn {
      position: fixed;
      width: 80px;
      height: 80px;
      bottom: 0;
      right: 0;
      border-radius: 10px;
      background: #45A1ED;
      margin: 10px;
    }

    #sendbtn:hover {
      background: #cfcfca;
    }

    .message {
      position: relative;
      background: #edf3f8;
      border-radius: .4em;
      margin-top: -7px;
      margin-left: 8px;
      margin-right: 8px;
      display: inline-block;
      border-radius: 5px;
      max-width: 80%;

    }

    .opponent:after {
      content: '';
      position: absolute;
      left: 0;
      top: 20px;
      width: 0;
      height: 0;
      border: 14px solid transparent;
      border-right-color: #edf3f8;
      border-left: 0;
      border-top: 0;
      margin-top: -15px;
      margin-left: -14px;
    }

    pre {
      white-space: normal;
      word-break: break-all;
      padding-left: 15px;
      padding-right: 15px;
      text-align: left;
      font-size: 15px;
      margin-top: 0.5rem;
      margin-bottom: 0.5rem;
    }

    .imgs {
      border-radius: 10px;
      margin-left: 8px;
      margin-right: 8px;
    }

    .message_left_margin {

      margin-left: 60px;
    }

    .date {

      font-size: 9px;
    }

    button{
      text-align: center;
    }
  </style>
  <script src="https://code.jquery.com/jquery-2.2.4.js" integrity="sha256-iT6Q9iMJYuQiMWNd9lDyBUStIq/8PuOW33aOqmvFpqI="
    crossorigin="anonymous"></script>

</head>

<body>
  <div id="topbar" class="fixed-top"><img src='http://127.0.0.1:8080/images/uploadFiles/<%= trgtProfile %>'
                                              
      style='width:50px; height:50px; border-radius: 35%; margin: 5px 10px 5px 15px;' />
    <%= trgtName %>
  </div>
  <div id="main">
    <ul id="messages"></ul>
    <form id="form" action="">
      <div id="btnbar" align="right">
        <button  type="button" class="btn btn-primary uploadbtn"><i class="bi bi-image-fill"></i></button>
        <button  type="button" class="btn btn-primary videobtn"><i class="bi bi-camera-video"></i></button>
      </div>

      <input id="name" type="hidden" value="" /><textarea id="input"></textarea>
      <span><button id="sendbtn" class="btn btn-light">전송</button></span>
    </form>
    <form id="upload" action="" method="post" enctype="multipart/form-data">
      <input type="file" id="uploadFile" name="uploadFile" style="display: none;" accept="image/*" />
    </form>
  </div>

  <!-- jQuery fancyapps -->
  <script src="https://cdn.jsdelivr.net/npm/@fancyapps/ui/dist/fancybox.umd.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
  crossorigin="anonymous"></script>
  <!-- socket io 서버를 설정-->
  <script src="/socket.io/socket.io.js"></script>
  <script>

    let userId = "<%= userId %>";
    let name = "<%= name %>"
    let profile = "<%= profile %>";
    let type = "<%= type %>";
    let target = "<%= trgt %>"; // 알림대상 - 대화상대
    let targetName = "<%= trgtName %>";
    let targetProfile = "<%= trgtProfile %>";
    let roomNo;

    let input = document.getElementById('input');

    let socket = io();

    socket.emit('roomjoin', { userId: userId, target: target, targetName: targetName, targetProfile: targetProfile, type: type });
    socket.on('roomjoin', function (data) {
      roomNo = data;
    });

    // submit시 action이 아닌 행동(preventDefault)취소 
    $('#form').on('submit', function (e) {
      e.preventDefault();
      // input value 존재시

      if (input.value) {
        // user의 메세지를 'chat message'로 서버로 보낸다(?) 
        socket.emit('chat message',
          {
            userId: userId, name: name, profile: profile, msg: input.value,
            img: "0", roomNo: roomNo, target: target, targetName: targetName, targetProfile: targetProfile, type: type
          });
          input.value = '';
          $('#input').focus();
      }
    });

    $("#input").keypress(function(key) {

      if (key.shiftKey && key.keyCode == 13) {//키가 13이면 실행 (엔터는 13)
        return;
      }else if(key.keyCode == 13){
        $('#sendbtn').click();
      }

    });


    let outuser = '';
    // 메시지 출력 함수
    function message(data) {
      let output = '';

      if (data.userId == userId) {
        outuser = data.userId;
        output += "<li align='right'>";
        if (data.img != 0) {
          output += `<span class="date" style="">${data.date}</span><a href="/imgFile/${data.img}"><img class='imgs' data-fancybox src='/imgFile/${data.img}' width='200'/></a>`;
        } else {
          output += `<span class="date">${data.date}</span><div class='message' style='background: blue;'>`;
          output += "<pre>" + data.msg + "</pre></div>";
        }
      } else {
        output += "<li>";
        if (outuser != data.userId) {
          output += `<div style='align-items: center'><img src='http://127.0.0.1:8080/images/uploadFiles/${data.profile}' style='width:40px; height:40px; border-radius: 30%; margin-right: 5px;' >`
          output += data.name + "</div>"
        }
        if (data.img != 0) {
          output += `<a href="/imgFile/${data.img}"><img class='imgs message_left_margin' src='/imgFile/${data.img}' width='200'/></a><span class="date">${data.date}</span>`;
        } else {
          if (outuser != data.userId) {
            output += "<div class='message opponent message_left_margin'>";
          } else {
            output += "<div class='message message_left_margin'>";
          }
          output += `<pre>${data.msg}</pre></div><span class="date">${data.date}</span>`;
        }
        outuser = data.userId;
      }
      output += "</li>";
      $(output).appendTo('#messages');
      window.scrollTo(0, document.body.scrollHeight);
    }

    socket.on('loadchat', (datas) => {
      for (var i = 0; i < datas.length; i++) {
        let data = datas[i];
        message(data);
      }
    });

    socket.on('chat message', function (data) {
      message(data)
    });

    // 메세지 보낼시 알림
    // socket.on('chat notice', (msg)=>{
    //   console.log("알림입니다~");
    //   $.ajax({
    //     url: "/common/json/addNotice",
    //     method : "POST",
    //     contentType : "application/JSON",
    //     data : JSON.stringify({"toUserId" : msg.target,
    //             "noticeContent" : msg.msg,
    //             "noticeUser" : {"userId": msg.userId},
    //             "noticeType" : "1"}),
    //     dataType : "text",
    //     success: function(form, state){
    //       //alert(state);
    //     }
    //   });
    // });

    function upload(formData) {
      // formData key &value 확인
      // for (var key of formData.keys()) {
      //   console.log(key);
      // }
      // for (var value of formData.values()) {
      //   console.log(value);
      // } 
      $.ajax({
        url: "/upload"
        , method: "POST"
        , processData: false
        , contentType: false
        , data: formData
        , dataType: 'JSON'
        , success: function (data, state) {

          socket.emit('chat message', {
            userId: userId, name: name, profile: profile, msg: "이미지를 보냈습니다",
            img: data.filename, roomNo: roomNo, target: target, targetName: targetName, targetProfile: targetProfile
          });
        }
      });
    }

    $('.uploadbtn').on('click', function () {
      $('#uploadFile').click();
    });

    $('#uploadFile').change(function () {
      //alert("업로드");
      let form = $('#upload');
      let formData = new FormData(form[0]);
      upload(formData);
    });

    /////// drag & drop event

    $(document).on("dragenter", function (e) {
      e.preventDefault();
      e.stopPropagation();
    }).on("dragover", function (e) {
      e.preventDefault();
      e.stopPropagation();
      $('#main').css("background-color", "#e1e6eb");
    }).on("dragleave", function (e) {
      e.preventDefault();
      e.stopPropagation();
      $('#main').css("background-color", "#FFF");
    }).on("drop", function (e) {
      e.preventDefault();
      $('#main').css("background-color", "#FFF");
      let file = e.originalEvent.dataTransfer.files[0];
      if (file != null) {
        if (file.length < 1) {
          alert("파일이 존재하지 않습니다.");
          return;
        } else {
          if (confirm("이미지를 업로드 하시겠습니까")) {
            let formData = new FormData();
            formData.append("uploadFile", file);
            upload(formData);
          }
        }
      }
    });
    ///////

    $('.videobtn').on('click', function () {
      popWin = window.open(
        "/" + roomNo,
        //"http://localhost:3030/"+roomNo,
        "videoChat",
        "left=1000, top=300, width=1000, height=800, marginwidth=0, marginheight=0, scrollbars=no, scrolling=no, menubar=no, resizable=no");

    })

    $('#backbtn').on('click', function () {
      location.href = `/chatList?userId=${userId}`;
    })

    // 이미지 다중 업로드 //////////////////////////////
    /* socket.on('loadchat',(data)=>{
    for (var i = 0; i < data.length; i++) {
      let item = document.createElement('li');
     console.log(data[i]);
      if(data[i].img != 0){
        let imgs = data[i].img.split("/");
        console.log(imgs.length);
        item.textContent = data[i].userId+" : ";
        for(var j = 0; j<imgs.length; j++){
          item.textContent += "<img src='/images/uploadFiles/"+imgs[j]+"' width='100' height='100'/>;
        }
      }else{
            item.textContent = data[i].userId+" : "+data[i].msg;
      }
      messages.appendChild(item);
      window.scrollTo(0, document.body.scrollHeight);
    }
  }) */

  // 서버에서 다시 보내온 'chat message' 데이터를 읽어온다.
    /*  socket.on('chat message', function (msg) {
       let item = document.createElement('li');
       /if(data[i].img == null || data[i].img != ""){
           let img = data[i].img.split("/");
           item.textContent = data[i].userId+" : ";
           for(var j = 0; j<img.length; j++){
             item.textContent += "<img src='/images/uploadFiles/"+img[j]+"' width='100' height='100'/>;
           }
         }else{
               item.textContent = data.userId+" : "+data[i].msg;
         }
       messages.appendChild(item);
       window.scrollTo(0, document.body.scrollHeight);
     }); */
    //////////////////////////////////

    // 알림
    // function notify(msg) {
    //   if (Notification.permission !== "denied") {
    //     Notification.requestPermission(permission => {
    //       if (permission === "granted") {
    //         new Notification(`${msg}`);
    //       } else {
    //         alert('Notification denied');
    //       }
    //     });
    //   }
    // }
    // socket.on('loadlist', data => {
    //   $('#list *').remove();
    //   for (var i = 0; i < data.length; i++) {
    //     console.log(data[i]);
    //     let item = document.createElement('li');
    //     item.textContent = data[i].userId;
    //     list.appendChild(item);
    //   }
    // })

    // socket.on('addlist', function (msg) {
    //   let item = document.createElement('li');
    //   item.textContent = msg.userId;
    //   list.appendChild(item);
    // })

    // socket.on('removelist', function (msg) {
    //   $(list).children(`li:contains("${msg.userId}")`).remove();
    // })


    // socket.on('notice', (msg)=>{
    //   if (Notification.permission !== "denied") {
    //     Notification.requestPermission(permission => {
    //       if (permission === "granted") {
    //         new Notification(`${msg}`);
    //       } else {
    //         alert('Notification denied');
    //       }
    //     });
    //   }
    // })

    //  채팅
    // join.addEventListener('submit', function (e) {
    //   e.preventDefault();
    //   // input value 존재시
    //   user.emit('roomleave', { name: userName, room: roomName });
    //   roomName = room.value;
    //   user.emit('roomjoin', { name: userName, room: roomName });
    //   input.value = '';
    // });

    // socket.on('roomjoin', function (msg) {
      //   let item = document.createElement('li');
      //   item.textContent = `${msg.name}님이 ${msg.room}에 입장하셨습니다.`;
      //   messages.appendChild(item);
    //   window.scrollTo(0, document.body.scrollHeight);
    // })

    // socket.on('roomleave', function (msg) {
    //   let item = document.createElement('li');
    //   item.textContent = `${msg.name}님이 퇴장하셨습니다.`;
    //   messages.appendChild(item);
    //   window.scrollTo(0, document.body.scrollHeight);
    // })

    // socket.on('chating', function (msg) {
      //   let item = document.createElement('li');
      //   item.textContent = msg;
      //   messages.appendChild(item);
      //   window.scrollTo(0, document.body.scrollHeight);
      // });

    //  삭제
    //  user.on('delete', function(msg){
    //    $('li:contains("'+msg+'")').remove();
    //  })

    // 사용자가 입력중입니다.
    // var ing = 0;
    // function keyCheck(){
    //   if(input.value){
    //     if(ing === 0){
    //       socket.emit('chating', '가 입력중입니다....');
    //       ing++;
    //     } 
    //   }else{
    //     socket.emit('delete', '가 입력중입니다....');
    //     ing = 0;
    //   }
    // }
  </script>
</body>

</html>